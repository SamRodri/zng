name: Tag and Release

on:
  push:
    branches: [ "release" ]
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1
  RUSTFLAGS: '--codegen=debuginfo=0 --deny=warnings'
  RUSTDOCFLAGS: '--deny=warnings'
  CARGO_TERM_COLOR: always

jobs:
  test-release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            file: libzng_view.so
          - os: windows-latest
            file: zng_view.dll
          - os: macos-13
            file: libzng_view.dylib

    name: test/prebuild (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
        - name: install cargo-nextest
          uses: taiki-e/install-action@v2
          with:
            tool: cargo-nextest
        - if: matrix.os == 'windows-latest'
          name: set windows env
          run: |
            echo "CC=clang-cl" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "CXX=clang-cl" | Out-File -FilePath $env:GITHUB_ENV -Append
        - if: matrix.os == 'macos-13'
          name: set macos env
          run: |
            echo "NEXTEST_RETRIES=3" >> $GITHUB_ENV
        - uses: actions/checkout@v4
          with:
            ref: release
        - run: cargo do version --verbose 
        - run: cargo do fmt --check
        - run: cargo do prebuild
        - run: cargo clean
        - run: cargo do check
        - run: cargo clean
        - run: cargo do doc
        - if: matrix.os == 'ubuntu-latest'
          name: upload doc
          uses: actions/upload-artifact@v4
          with:
            name: doc
            path: release/doc
        - run: cargo clean
        - run: cargo do test --lib --bins --tests --nextest
        - run: cargo clean
        - run: cargo do test --doc
        - run: cargo clean
        - run: cargo do test --macro --all
        - run: cargo clean
        - name: upload prebuild
          uses: actions/upload-artifact@v4
          with:
            name: prebuilt-${{ matrix.os }}
            path: zng-view-prebuilt/lib/${{ matrix.file }}
  
  test-cargo-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release
      - run: cargo do publish --test

  tag:
    runs-on: ubuntu-latest
    needs: [test-release, test-cargo-publish]
    permissions:
      contents: write
    outputs:
      tag_name: ${{ steps.publish_version_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: release
      - id: publish_version_tag
        run: cargo do publish_version_tag --execute | tail -n 1 >> "$GITHUB_OUTPUT"
  
  publish-release:
    runs-on: ubuntu-latest
    needs: [tag]
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: prebuilt-ubuntu-latest
          path: prebuilt
      - uses: actions/download-artifact@v4
        with:
          name: prebuilt-windows-latest
          path: prebuilt
      - uses: actions/download-artifact@v4
        with:
          name: prebuilt-macos-13
          path: prebuilt
      - run: ls --all ./prebuilt
      - name: publish release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.tag.outputs.tag_name }}
          artifacts: "prebuilt/*"

  publish-doc:
    runs-on: ubuntu-latest
    needs: [tag]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          repository: zng-ui/zng-ui.github.io
          ref: main
          token:  ${{ secrets.PAGES_DOC_PUSH_TOKEN }}

      - run: rm -rf doc
      - uses: actions/download-artifact@v4
        name: push
        with:
          name: doc
          path: doc
      - run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"
          git add -A
          git commit -m ${{ needs.tag.outputs.tag_name }} --quiet
          git push
  cleanup:
    runs-on: ubuntu-latest
    if: always()
    needs: [publish-release, publish-doc]
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            prebuilt-*
            doc
          failOnError: false